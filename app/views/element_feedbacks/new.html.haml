.span10.offset1
  = render 'shared/check_turker'

  #step-feedback.hide
    .row
      .span6.offset2
        .step1
          %p
            Look at the design carefully.
        .step2.hide
          %p
            Draw a box on the following design to indicate: 
            %strong.text-warning#element_name
          %p You can easily move and resize the drawn box. If your drawn box is not related to the element you described, your result could be rejected.
    .row.text-center
      .span10
        %image.img-polaroid#picture{src: @design.picture.url}
    .row
      .span6.offset2
        .step1
          %p
            Name at least two 
            %strong.text-warning= @configuration.name.pluralize
            you see in the design. Use a comma(,)to separate the #{@configuration.name.pluralize}.
          %p.text-warning
            If a #{@configuration.name} is not in the desgin, your result could be rejected.
    .row
      .span10
        %input.input-block-level.step1#elements
        %hr
        %a.btn.btn-primary#process-btn Next
= render 'shared/feedback_result'

:coffee
  $ =>
    current_element = 1
    current_step = 1
    steps = []
    element_data = []
    elements = []
    current_selection = make_image_selectable_with_button("#picture", "#process-btn")

    step1 = () ->
      elements_str = $("#elements").val()
      if elements_str
        elements = elements_str.split(",")
        if elements.length < 2
          warning("You should name at least two #{@configuration.name.pluralize}.")
          return false
        else
          $(".step1").hide()
          $(".step2").show()
          num = elements.length - 1
          steps.push(step2) while num -= 1
          steps.push(step3)
          console.log steps.length
          $("#process-btn").addClass("disabled")
          current_element = 1
          $("#element_name").html(elements[current_element - 1])
          $("#process-btn").html("Submit") if current_element is elements.length
          current_selection.setOptions {enable: true}
          return true
      else
        warning("Please name at least two #{@configuration.name.pluralize}.")
        return false

    step2 = () ->
      #process draw box
      element_data.push {name: elements[current_element-1], x1: current_selection.getSelection().x1, y1: current_selection.getSelection().y1, x2: current_selection.getSelection().x2, y2: current_selection.getSelection().y2}
      console.log(element_data[current_element - 1])
      current_selection.cancelSelection()
      $("#process-btn").addClass("disabled")

      current_element += 1
      $("#element_name").html(elements[current_element - 1])
      $("#process-btn").html("Submit") if current_element is elements.length
      return true

    step3 = () ->
      step2()
      $.ajax {
        type: "Post",
        url: "#{batch_create_design_element_feedbacks_path(@design)}",
        data: JSON.stringify({worker_id: window.current_worker_id,configuration_id: "#{@configuration.id}", feedbacks: element_data}),
        dataType: "json",
        contentType: 'application/json',
        success: (data) =>
          $("#step-feedback").hide()
          $("#step-feedback-result").show()
      }

    steps = [step1, step2]

    $("#process-btn").click =>
      return if $("#process-btn").hasClass("disabled")
      current_step = @process_steps(current_step, steps)
