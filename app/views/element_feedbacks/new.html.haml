.span10.offset1
  .row
    .span6.offset2
      .step1
        %p
          Look at the design carefully.
      .step2.hide
        %p
          Draw a box on the following design to indicate: 
          %strong.text-warning#element_name
        %p You can easily move and resize the drawn box. If your drawn box is not related to the element you described, your result could be rejected.
  .row.text-center
    .span10
      %image#picture{src: @design.picture.url}
  .row
    .span6.offset2
      .step1
        %p
          Name at least two 
          %strong.text-warning= @configuration.name.pluralize
          you see in the design. Use a comma(,)to separate the #{@configuration.name.pluralize}.
        %p.text-warning
          If a #{@configuration.name} is not in the desgin, your result could be rejected.
  .row
    .span10
      %input.input-block-level.step1#elements
      %hr
      %a.btn.btn-primary#process-btn Next
%form{:action => design_element_feedbacks_path(@design), :method => "post"}

:coffee
  $ =>
    current_element = 1
    current_step = 1
    steps = []
    element_data = []
    elements = []
    current_selection = null

    step1 = () ->
      elements_str = $("#elements").val()
      if elements_str
        elements = elements_str.split(",")
        if elements.length < 2
          warning("You should name at least two #{@configuration.name.pluralize}.")
          return false
        else
          $(".step1").hide()
          $(".step2").show()
          num = elements.length
          steps.push(step2) while num -= 1
          console.log steps.length
          $("#process-btn").addClass("disabled")
          current_element = 1
          $("#element_name").html(elements[current_element - 1])
          current_selection = $("#picture").imgAreaSelect {
            instance: true,
            handles: true,
            onSelectStart: (img, selection) => console.log("start"),
            onSelectEnd: (img, selection) => 
              if selection.x1 isnt selection.x2 and selection.y1 isnt selection.y2
                console.log("x1:" + selection.x1 + " y1:" + selection.y1 + " x2:" + selection.x2 + " y2:" + selection.y2 )
                $("#process-btn").removeClass("disabled")
              else
                console.log("cancel")
                $("#process-btn").addClass("disabled")
          }
          return true
      else
        warning("Please name at least two #{@configuration.name.pluralize}.")
        return false

    step2 = () ->
      #process draw box
      element_data.push {name: elements[current_element-1], x1: current_selection.getSelection().x1, y1: current_selection.getSelection().y1, x2: current_selection.getSelection().x2, y2: current_selection.getSelection().y2}
      console.log(element_data[0])
      current_selection.cancelSelection()
      $("#process-btn").addClass("disabled")

      current_element += 1
      $("#element_name").html(elements[current_element - 1])
      return true

    steps = [step1, step2]
    process_steps = (current_step, steps) ->
      if steps.length <= current_step
        return steps.length
      if steps[current_step - 1]()
        #if current_step + 1 >= steps.length
          #$("#process-btn").html("Submit")
        return current_step + 1
      else
        return current_step

    $("#process-btn").click =>
      current_step = process_steps(current_step, steps)
