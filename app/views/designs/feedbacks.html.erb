<% content_for :head do %>
  <%= stylesheet_link_tag :fedone %>
<% end %>
<table class="table">
</table>
<div class = "text-center">
	<div id="container" >
		<div id="viz" class="heatnetwork">

			<div id="overlay"></div>
		</div>

		<div id="tabs" class="tabs">
			<ul class="nav nav-tabs" id="myTab">
		    </ul>
		    <div class="tab-content" id ="myTabContent"></div>
			

		</div>
		<div id="viz2" align='center' style='clear: both'></div>
		
		<div id='panel_heatnetwork'>


		<div id='explain_heatnetwork' class="explaintxt" style ="overflow-y:auto;"></div>
			

		</div>

	</div>
	
	</div>

<script type="text/javascript">



var current_tab;//#tabs-eleorg global var 
var json_feedbackTypes = {"#tabs-eleorg":"ele","#tabs-notice":"ele","#tabs-imp":"imp","#tabs-goal":"goal","#tabs-criteria":"guide"};
var explain_feedbackTypes = {"#tabs-eleorg":"#explain_heatnetwork","#tabs-notice":"#explain_heatnetwork","#tabs-imp":"#explain_imp","#tabs-goal":"#explain_goal","#tabs-criteria":"#explain_criteria"};

var isHeatmapvisible = "false"; //global var
var $panel_img = $('#panel_heatnetwork');


var optFilters = {"ele":{"isClickedTextPanel":false,"isClickedLegendPanel":false,"subtypetxt":[]},
		"imp":{"subtype":[]},
		"goal":{"isClickedTextPanel":false,"isClickedLegendPanel":false,"subtypescore":[]},
		"guide":{"isClickedTextPanel":false,"isClickedLegendPanel":false,"subtypescore":[]},
		}; //global var
//		"goal":{"subtype":["goal0","goal1"],"subtypescore":["goal0_0","goal0_6"]},
//{"subtype":["object"],"txt":["smoothie"]

var json_allColor = {"ele":{"object":0,"color":1,"activity":2,"shape":3}, "imp":{}, "goal":{},"guide":{}};
//var arr_allColor = ["#69D2E7","#E0E4CC","#E08E79","#774F38","#95D4EC"];
var arr_allColor = ["#aec7e8","#ffbb78","#98df8a","#f7b6d2","#c5b0d5","#ff9896"];
var fillColorImp;


var hash_ImpContent_IDinCloud = new Hashtable();
var hash_eleSubtypetxt_IDinTable = new Hashtable();

var tab_stackbar_goal;//global var
var tab_stackbar_criteria;//tab_element
var tab_element;//tab_element

var object_heatnetwork;
var mouseUpDown = 0;

//need data
//d3.json("jsonall.json", function(error, json_all) {
var json_all = gon.json_data;
	
	var isShownTabs = json_all.isshown;
	//isShownTabs = {"eleorg":true,"notice":true,"imp":true,"goal":true,"criteria":true};
	
      $(function() {
      	    
      	    $('body')
      	    .mouseup(function(e) {
      	    	mouseUpDown = mouseUpDown + 1;
      	    	console.log("isup:"+mouseUpDown);
				//console.log("mouseUpDown:"+mouseUpDown);
	     	 })	
	      	.mousedown(function(e) {
	      		mouseUpDown = mouseUpDown - 1;
	      		console.log("isdown:"+mouseUpDown);
				//console.log("mouseUpDown:"+mouseUpDown);
	      	});
       	    
        	if (isShownTabs["eleorg"])
        	{
        		addTab("eleorg","Elements");
            	$("div#tabs-eleorg").append("<div id='elementorg' class = 'elementorg'> </div>");
        	}

        	if (isShownTabs["notice"])
        	{
              	addTab("notice","First Notice");
        		$("div#tabs-notice").append("\
                	<div class='elementvis' align='left' style='height: 400px;'> \
                		<table align='left'> \
                			<tbody id='elementTableID'>\
                			</tbody>\
                		</table>\
                		<div  style='float: left; padding-left:19px' id='eleLegend'></div>\
                	</div>");   
        	}
        	
        	if (isShownTabs["imp"])
        	{
            	addTab("imp","Impressions");
            	
        		$("div#tabs-imp").append("\
                	<div id='wordcloudContainer'></div>\
                	<div class='explaintxt' align = 'center' id='explain_imp' style ='max-height: 400px; overflow-y:auto;'></div>");  
        	}

        	if (isShownTabs["goal"])
        	{
            	addTab("goal","Goals");            	
        		$("div#tabs-goal").append("\
        			<div align='left'> \
    			    	<div id='stackbarLegend_goal'></div>\
    			    	<div id='stackbar_goal'></div>\
    			    	<div class='explaintxt' align = 'center' id='explain_goal' style ='max-height: 400px; overflow-y:auto;'></div>\
    			    </div>");  
            }

        	if (isShownTabs["criteria"])
        	{
            	addTab("criteria","Guidelines");
        		$("div#tabs-criteria").append("\
    				<div align='left'>\
						<div id='stackbarLegend_criteria'></div>\
						<div id='stackbar_criteria'></div>\
						<div class='explaintxt' align = 'center' id='explain_criteria' style ='max-height: 400px; overflow-y:auto;'></div>\
					</div>");  
        	}
			
        	//$( "#tabs" ).tabs();
        	$('#myTab a').click(function(e) {
			    e.preventDefault();
			    $(this).tab('show');
			})
			$('#myTab a:first').tab('show');
        	//current_tab = $("#tabs ul>li a").eq($( "#tabs" ).tabs( "option", "active")).attr('href');
        	current_tab = $("ul#myTab li.active").find('a').attr('href');
        	if(current_tab == "#tabs-eleorg")
		    	{ isHeatmapvisible = "false";
		    	}else{isHeatmapvisible = "true";}

          	$("#tabs").click(
        		    function(event) {
        		    	//if (current_tab != $("#tabs ul>li a").eq($( "#tabs" ).tabs( "option", "active")).attr('href'))
        		    	if (current_tab != $("ul#myTab li.active").find('a').attr('href'))
        		    	{
             		    	
             		    	//current_tab = $("#tabs ul>li a").eq($( "#tabs" ).tabs( "option", "active")).attr('href');
             		    	current_tab = $("ul#myTab li.active").find('a').attr('href');

							// $("#tabs ul>li a").eq($tabIndex).attr('href');
             		    	//don't show visual pointers when clike the first tab "elements"
             		    	if(current_tab == "#tabs-eleorg")
             		    	{ isHeatmapvisible = "false";
             		    	}else{isHeatmapvisible = "true";}
            		    	
        		    		 if ( isHeatmapvisible == "true")
            		    	 {
            		    	 	 $('#heatmapID_eleorg').slideUp('fast',function(){ $('#heatmapID_eleorg').addClass('hide').slideDown(0); });
            		    	 	 
                		    	 object_heatnetwork.showOneTypeNodes(json_feedbackTypes[current_tab],true);
                		    	 $panel_img.slideUp(0,function(){
                		         $panel_img.removeClass('hide').slideDown('fast');
                		         });
            		    	 }else{
            		    		 object_heatnetwork.hide();
            		             $panel_img.slideUp('fast',function(){
            		             $panel_img.addClass('hide').slideDown(0);
            		             });
            		             
            		             if(current_tab == "#tabs-eleorg") 
            		             $('#heatmapID_eleorg').slideUp(0,function(){ $('#heatmapID_eleorg').removeClass('hide').slideDown('fast'); });
                     		 }    
           		    	  
                		 }
        		    	 console.log("current tab: "+json_feedbackTypes[current_tab]);
        		    	    		    	        		    		    	 
        		    }
        		);      
    		
        	});

    //need data
    var path_design = "<%= URI.join(request.url, @design.picture.url) %>";
    var img_width;
    var img_height;
    
    var img = new Image();
    img.src = path_design;
        

 	$(document).ready(function() {
        	
   	   img.onload = function() {

	   var $button = $('#myButton'),
       $panel_text   = $('#tabs');


	   $('input[name=radio-text-visual]:radio', '#radios-text-visual').click(function () {   
		   //Hook the click event for selected elements
			isHeatmapvisible =  $('input[name=radio-text-visual]:checked', '#radios-text-visual').val()

			     if ( isHeatmapvisible =="true") {
			        $('#heatmapID_eleorg').slideUp('fast',function(){ $('#heatmapID_eleorg').addClass('hide').slideDown(0); });
			 		//var activeIndex = $( "#tabs" ).tabs( "option", "active");
					//$( "#tabs-img" ).tabs( "option", "active", current_tab );   
					
			   	    //object_heatnetwork.show();
			   	   object_heatnetwork.showOneTypeNodes(json_feedbackTypes[current_tab],true);
			   	   //d3.select('.extent').attr("visibility", "visible");
			       //d3.select('#test').attr("visibility", "visible");
			         
			       //$panel_text.slideUp('fast',function(){
			       // $panel_text.addClass('hide')
			       //       .slideDown(0);
			       //});
			
			       $panel_img.slideUp(0,function(){
			           $panel_img.removeClass('hide')
			                .slideDown('fast');
			         });
			         
			     } else {
			      //var activeIndex = $( "#tabs-img" ).tabs( "option", "active");
				  //$( "#tabs" ).tabs( "option", "active", current_tab ); 
			
			   	  object_heatnetwork.hide();
			   	  
			
			       //$panel_text.slideUp(0,function(){
			       //  $panel_text.removeClass('hide')
			       //       .slideDown('fast');
			       //});
			
			       $panel_img.slideUp('fast',function(){
			           $panel_img.addClass('hide')
			                .slideDown(0);
			         });
			         
			      if(current_tab == "#tabs-eleorg")   
			      $('#heatmapID_eleorg').slideUp(0,function(){ $('#heatmapID_eleorg').removeClass('hide').slideDown('fast'); });
			     }
					
	   });


        	img_width = this.width;
          	img_height = this.height;


            console.log("image size:"+img_width + 'x' + img_height);
            //alert(img_width + 'x' + img_height);
            

            d3.select("#viz").style("width", img_width+"px");
            d3.select("#viz").style("height", img_height+"px");
            var imgSVG = d3.select("#viz")
            .append("svg")
            .attr("width", img_width)
            .attr("height", img_height);  
        
            imgSVG.append("image")
    	    .attr("xlink:href", path_design)
    	    .attr("id", "imageID")
    	    .attr("width", img_width)
    	    .attr("height", img_height);
    	    
            //if((img_height - 300)>=400)
			//$('.explaintxt').css('max-height', '400px');

        
        var iWordsContent = [];		
		var iWordsVotes = [];

		var lables_goal = [];
		var tooltips_goal = [];
		var arrs_ratings_goal = [];
		if (isShownTabs["goal"])
		{
			lables_goal = json_all.legend.goal.title;
			tooltips_goal = json_all.legend.goal.content;
			var num_goal = lables_goal.length;
			//var lables_goal = ["goal 1","goal 2"];
			//var tooltips_goal = ["When you look at the website, you can easily understand that this website can help you send kudos messages to your friends to make them and yourself happy.","When you look at the website, it will make you feel good and positive."];	
			for (var i = 0; i < num_goal ; ++i)
		    {   var mx = [].repeat(0, 7);
		        arrs_ratings_goal[i]  = mx;}
		}

		var lables_criteria = [];
		var tooltips_criteria = [];
		var arrs_ratings_criteria = [];
		if (isShownTabs["criteria"])
		{
			var lables_criteria = json_all.legend.guide.title;
			var tooltips_criteria = json_all.legend.guide.content;
			var num_criteria = lables_criteria.length;
			var arrs_ratings_criteria = [];
			for (var i = 0; i < num_criteria ; ++i)
		    {   var mx = [].repeat(0, 7);
		        arrs_ratings_criteria[i]  = mx;}
				//lables_criteria = ["proximity","alignment","repetition","constrast"];
		}

		var jsonArray_elements = [];
		var arr_cords_elements = {};
		var elementsHashTmp = {};
		//jsonArray_elements = {"id":"3355_2","type":"shape","typevote":0,"element":"rectangle","allvote":"9"}
        // arr_cords_elements = {"3355_2":[["62","181","355","230"],["463","218","548","263"],["465","224","548","259"],["61","187","353","231"],["62","187","347","336"]],"3355_1":[["388","299","471","369"],["385","296","472","371"],["389","297","469","374"],["292","179","354","225"],["391","296","466","377"]],"3366_1":[["73","191","350","224"],["64","184","351","228"],["401","303","463","373"],["3","16","899","86"]],"3380_1":[["394","399","461","460"],["389","392","462","468"],["391","391","472","469"]],"3366_2":[["67","373","348","404"],["65","373","349","408"],["65","372","354","411"]],"3342_1":[["463","220","551","263"],["467","225","546","254"],["461","221","548","260"],["467","225","547","259"]],"3380_3":[["390","292","471","380"],["390","293","467","370"],["384","305","473","371"]],"3380_2":[["290","177","351","235"],["152","0","274","109"]],"3380_4":[["401","494","453","537"],["382","489","469","537"]],"3378_1":[["398","404","473","466"],["384","393","470","471"]],"3385_2":[["51","10","373","89"],["57","17","380","84"]],"3388_1":[["161","15","255","88"]],"3365_3":[["263","225","348","308"]],"3341_2":[["625","33","696","76"]],"3342_2":[["130","110","235","141"]],"3345_1":[["282","250","341","309"]],"3347_1":[["52","19","385","145"]],"3347_2":[["386","218","719","268"]],"3379_2":[["552","227","612","254"]],"3378_2":[["419","328","441","348"]],"3352_1":[["390","409","481","479"]],"3369_2":[["396","498","461","537"]],"3341_1":[["161","5","254","96"]]};
        
		var i_ele = 0, i_imp = 0, i_goal = 0, i_guide = 0;
		json_all.nodes.forEach(function(d) {

				switch (d.type)
				{
				case "ele":
					if(!(d.content.subtype in json_allColor[d.type]))
					{ json_allColor[d.type][d.content.subtype] = i_ele; i_ele ++;}

					//get the data for the right panel "ele"
					if(!(d.content.txt in elementsHashTmp) )
					{
						elementsHashTmp[d.content.txt] = "e_"+d.id;
						//'typevote:json_allColor[d.type][d.content.subtype]' makes typevote to be consistent with json_allColor
						jsonArray_elements.push({id:"e_"+d.id, type:d.content.subtype, typevote:json_allColor[d.type][d.content.subtype], element:d.content.txt, allvote:d.content.score  });		
						
						//the following line is used to control the table from heatnetwork
						hash_eleSubtypetxt_IDinTable.put(d.content.subtype+"_"+d.content.txt,"e_"+d.id);
						//hash_eleSubtypetxt_IDinTable.put(jsonArray_elements[i].type+"_"+jsonArray_elements[i].element, jsonArray_elements[i].id);						
					}
					if(!(elementsHashTmp[d.content.txt] in arr_cords_elements))
					{ arr_cords_elements[elementsHashTmp[d.content.txt]] = [];}
					arr_cords_elements[elementsHashTmp[d.content.txt]].push(d.cord);
    
			  	break;
				case "imp": 
					if(!(d.content.subtype in json_allColor[d.type]))
					{ json_allColor[d.type][d.content.subtype] = i_imp; i_imp ++;} 

					//get the data for the wordcloud
					if (iWordsContent.indexOf(d.content.subtype) == -1) {
						iWordsContent.push(d.content.subtype);//imp words
						iWordsVotes.push(d.content.score);//imp words vote
						hash_ImpContent_IDinCloud.put(d.content.subtype, "w_"+d.id); //hash_ImpContent_IDinCloud.put(iWords[i], "w"+ids[i]);//id has to include a letter				
					}

				break;
				case "goal":
					if (isShownTabs["goal"])
					{
						if(!(d.content.subtype in json_allColor[d.type]))
						{ 
							 json_allColor[d.type][d.content.subtype] = d.content.subtype.slice(4);
								
							//json_allColor[d.type][d.content.subtype] = i_goal; i_goal ++;
						}
						arrs_ratings_goal[d.content.subtype.slice(4)][d.content.score] ++;
					}
					
				break;
				case "guide":
					if (isShownTabs["criteria"])
					{
						if(!(d.content.subtype in json_allColor[d.type]))
						{ 
							 json_allColor[d.type][d.content.subtype] = d.content.subtype.slice(5);
							 //json_allColor[d.type][d.content.subtype] = i_guide; i_guide ++;
						}
						arrs_ratings_criteria[d.content.subtype.slice(5)][d.content.score] ++;
					}

			  	break;
				}
					
				
			});
        console.log(json_allColor);
        //+++++++++++++++++++++word cloud beign++++++++++++++++++++++++
        if (isShownTabs["imp"])
        {	
	        fillColorImp =d3.scale.linear().domain([json_all.range.imp[1],json_all.range.imp[0]]).range(["#000000","#033649"]);
	        //fillColorImp =d3.scale.linear().domain([json_all.range.imp[1],json_all.range.imp[0]]).range(["#2ca02c","#98df8a"]);	
	        
			//var iWords = ["pastel colors", "fruity" ,"clean", "energy drink", "new", "juice", "tasty","fresh", "colorful"];
			//var iWordsVotes = [1,1,2,2,3,3,4,4,5,7];
			//var cordsforImps = '{"w_0":[[0,0,51,104]],"w_1":[[0,0,51,104],[29,34,80,123],[50,50,180,223],[0,0,51,104],[70,70,180,223]],"w_2":[[29,34,80,123],[50,50,180,223]],"w_3":[[29,34,80,123],[50,50,180,223]],"w_4":[[0,0,51,104],[29,34,80,123],[50,50,180,223]],"w_5":[[0,0,51,104],[29,34,80,123],[50,50,180,223]],"w_6":[[0,0,51,104],[29,34,80,123],[50,50,180,223]],"w_7":[[0,0,51,104],[29,34,80,123],[50,50,180,223]],"w_8":[[0,0,51,104],[29,34,80,123],[50,50,180,223]],"w_9":[[0,0,51,104],[29,34,80,123],[50,50,180,223]]}';
	        //var fill =d3.scale.linear().domain([0,iWords.length-1]).range(["#0B486B","#A8DBA8"]);
	        //var mapsize =d3.scale.linear().domain([1,7]).range([20,60]);
			
	        //var mapsize =d3.scale.linear().domain([0,impressionWords.length-1]).range(["#0B486B","#A8DBA8"]);
	        var tab_wordcloudImps = wordcloud ("#wordcloudContainer", iWordsContent, hash_ImpContent_IDinCloud, iWordsVotes, img_width, img_height, object_heatnetwork);
	      //var tab_wordcloudImps = wordcloud ("#wordcloudContainer", iWords, hash_ImpContent_IDinCloud, iWordsVotes, img_width, img_height, arrCordsforImps, object_heatnetwork);
	    	
        }

  
       	//+++++++++++++++++++++word cloud end  ++++++++++++++++++++++++
       	//$('#elementcontainer').masonry({
		//  itemSelector: '.element',
		//  columnWidth: 120
		//});

		//var pets = '{"goal_0_0":[{"name":"jack"},{"name":"john"},{"name":"joe"}]}';
		//var arr = JSON.parse(pets);
		//alert(arr.goal_0_0[0].name);
	
	 	//var cords=[[0,0,51,104],[29,34,80,123],[50,50,180,223]];
	 	//var currentheatmap = heatmap(imgSVG, img_width, img_height, cords);
	 
	 	//setTimeout(function() { $('.heatmapline').remove(); }, 1000);
	 	//setTimeout(function() {heatmap(imgSVG, img_width, img_height, cords); }, 2000);
	    if (isShownTabs["goal"])
	    {
	    		var containID_goal = "#stackbar_goal"
	    		var	containID_Legend_goal = "#stackbarLegend_goal"
	    		var mode = 	"mode_goal";//requried
	    		//var arrs_ratings_goal = [[0,0,1,2,7,6,4],[0,0,0,1,5,8,6]];//requried anbang to make fig
		
	    		var xlables_goal = ["-3","","","0","","","+3"];
	    		
	    		//var xlables_goal = ["____unsupported"," ","  ","   ","    ","     ","supported"];
			
	    		//lables_goal = ["chinese style","on table"];
	    		//lables_goal = ["research activities","non-research activities","personal brand"];
	    		//lables_goal = ["warm feeling","showcase good work"];
	    		 
	    		//lables_goal = ["try new drink","grab attention"];
	    		//lables_goal = ["documentary film festival","movie poster"];
	    		//lables_goal = ["notice Shakespeare portrait","medieval feeling"];
	    		//lables_goal = ["kudo message","feel positive"];
	    		//lables_goal = ["quick overview","easily compare"];
	    		
	    		tab_stackbar_goal = stackedbars(containID_goal,containID_Legend_goal, mode, arrs_ratings_goal, lables_goal, tooltips_goal, xlables_goal, "#overlay", img_width, img_height);		
	    }



	    if (isShownTabs["criteria"])
		{
			var containID_criteria = "#stackbar_criteria"
			var	containID_Legend_criteria = "#stackbarLegend_criteria"
			var mode2 = 	"mode_criteria";
	
			var xlables_criteria = ["-3","","","0","","","+3"];
			//var tooltips_criteria = ["criteria 1 proximity", "criteria 2 alignment", "criteria 3 repetition", "criteria 4 contrast"];
			
		    tab_stackbar_criteria = stackedbars(containID_criteria,containID_Legend_criteria,mode2, arrs_ratings_criteria, lables_criteria, tooltips_criteria, xlables_criteria, "#overlay", img_width, img_height);
				
		}
	
	    
	    if (isShownTabs["eleorg"]){
			var tab_elementorg = elementorg("#elementorg", jsonArray_elements, arr_cords_elements, img_width, img_height);	
		}
		
		if (isShownTabs["notice"]){
			var containID_Legend_ele = "#eleLegend";
			tab_element = elements("#elementTableID",containID_Legend_ele, jsonArray_elements, arr_cords_elements, img_width, img_height);	
		}
					


	

		/*
		var json_all = {"nodes":[{"id":"id0","x":160,"y":270,"cord":[130,170,190,370],"size":20000,"type":"guide","content":{"subtype":"guide1","score":5,"txt":"hello1 guide1"}},
                              		{"id":"id1","x":80,"y":80,"cord":[60,20,100,140],"size":60000,"type":"guide","content":{"subtype":"guide2","score":4,"txt":"hello2 guide2"}},
                                    {"id":"id2","x":100,"y":180,"cord":[50,100,150,260],"size":10000,"type":"goal","content":{"subtype":"goal1","score":6,"txt":"hello3"}},
                                    {"id":"id3","x":30,"y":130,"cord":[20,100,40,160],"size":90000,"type":"imp","content":{"subtype":"cool","score":11,"txt":"hello4"}},
                                    {"id":"id4","x":90,"y":130,"cord":[50,100,130,160],"size":100000,"type":"ele","content":{"subtype":"shape","score":11,"txt":"element name"}}
                              ], "range":{"guide":[0,6],"goal":[0,6],"imp":[1,16],"ele":[1,22]}

        };     	    
		*/
     object_heatnetwork = heatnetwork(imgSVG, img_width, img_height, json_feedbackTypes[current_tab], json_all, optFilters, hash_ImpContent_IDinCloud);
	 if(isHeatmapvisible == "true")
	 { 	 
	 	
	 	 $('#heatmapID_eleorg').slideUp('fast',function(){ $('#heatmapID_eleorg').addClass('hide').slideDown(0); });
		 
		 object_heatnetwork.showOneTypeNodes(json_feedbackTypes[current_tab],true);
     	 $panel_img.slideUp(0,function(){
         	$panel_img.removeClass('hide').slideDown('fast');
        });}
     else{
          object_heatnetwork.hide();
          $panel_img.slideUp('fast',function(){
          	$panel_img.addClass('hide').slideDown(0);
          });
          
          if(current_tab == "#tabs-eleorg")
          $('#heatmapID_eleorg').slideUp(0,function(){ $('#heatmapID_eleorg').removeClass('hide').slideDown('fast'); });

      }

	 if (isShownTabs["imp"])   
     tab_wordcloudImps.updateObject_heatnetwork(object_heatnetwork);
	
  }
});


       
//});//end for read json



function assignColor(subtype){
	 var colorTmp = json_allColor[json_feedbackTypes[current_tab]][subtype];
		var color = d3.scale.category10();
		 
		if(colorTmp >= arr_allColor.length)
		{return color(colorTmp);}
		else{return arr_allColor[colorTmp];}
	 }

function assignColorImp(score){
	 
	 return fillColorImp(score);
	 
	 }

function addTab(id, title)
{
	 $("div#tabs ul").append(
	            "<li><a href='#tabs-" + id + "'>" + title + "</a></li>"
	        );
	if($('#tabs >ul >li').size() ==1)
	{
		//$("div#tabs").append(
			$("#myTabContent").append(
	            "<div class='tab-pane active' id='tabs-" + id + "'>"  + "</div>"
	        );
	}else
	{
			$("#myTabContent").append(
	            "<div class='tab-pane' id='tabs-" + id + "'>"  + "</div>"
	        );
	}       


}

Array.prototype.repeat= function(what, L){
 	 while(L) this[--L]= what;
 	 return this;
 	}
 	
Array.max = function( array ){
     return Math.max.apply( Math, array );
 };
  		 
</script>
