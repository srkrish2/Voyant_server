.span12.row-fluid
  .span2.offset3
    %image(src="#{URI.join(request.url, @design.picture.url(:thumb))}")
  #accordion.accordion.span4
    .accordion-group
      .accordion-heading
        %a.accordion-toggle{"data-parent" => "#accordion", "data-toggle" => "collapse", :href => "#audienceTab"}
          %span{:style => "padding: 0 0 0 15px;"} Audience
      #audienceTab.accordion-body.collapse
        .accordion-inner
          #audi.content
            Anim pariatur cliche...
    .accordion-group
      .accordion-heading
        %a.accordion-toggle{"data-parent" => "#accordion", "data-toggle" => "collapse", :href => "#elementsTab"}
          %span{:style => "padding: 0 0 0 15px;"} Elements
      #elementsTab.accordion-body.collapse
        .accordion-inner
          #ele.content
    .accordion-group
      .accordion-heading.row-fluid
        %span.span1{:style => "padding: 5px 0 0 10px;"}
          %input#cb_notice{:type => "checkbox"}/
        %a.accordion-toggle.span6{"data-parent" => "#accordion", "data-toggle" => "collapse", :href => "#firstNoticeTab", :style => "padding-left: 0px;"}
          %span.pull-left First Notices
      #firstNoticeTab.accordion-body.collapse
        .accordion-inner
          #notice.content
            %p
              Intro...
    .accordion-group
      .accordion-heading.row-fluid
        %span.span1{:style => "padding: 5px 0 0 10px;"}
          %input#cb_imp{:type => "checkbox"}/
        %a.accordion-toggle.span6{"data-parent" => "#accordion", "data-toggle" => "collapse", :href => "#impressionTab", :style => "padding-left: 0px;"}
          %span.pull-left Impressions
      #impressionTab.accordion-body.collapse
        .accordion-inner
          #imp.content
            %p
              Intro...
    .accordion-group
      .accordion-heading.row-fluid
        %span.span1{:style => "padding: 5px 0 0 10px;"}
          %input#cb_goal{:type => "checkbox"}/
        %a.accordion-toggle.span6{"data-parent" => "#accordion", "data-toggle" => "collapse", :href => "#goalTab", :style => "padding-left: 0px;"}
          %span.pull-left Goals
      #goalTab.accordion-body.collapse
        .accordion-inner
          #instru_goal.instru
          %table#goal.content
            %tbody
          #goal_div.content
    .accordion-group
      .accordion-heading.row-fluid
        %span.span1{:style => "padding: 5px 0 0 10px;"}
          %input#cb_guide{:type => "checkbox"}/
        %a.accordion-toggle.span6{"data-parent" => "#accordion", "data-toggle" => "collapse", :href => "#guideTab", :style => "padding-left: 0px;"}
          %span.pull-left Guidelines
      #guideTab.accordion-body.collapse
        .accordion-inner
          %table#guide.content
            %tbody
          #guide_div.content
.span12.offset6
  %input#submit-btn{:type => "submit", :value => "Save"}/
:javascript
  var fed_config = {is_required:{audience:true, element:true, impression:true, first_notice:true, guideline: true, goal: true}, audience:{gender:[true,false],age:[true,true,true,true,true,true],country:[true,true,true,true,true]}, element:[{name:'object',is_required:true},{name:'color',is_required:true},{name:'activity',is_required:true},{name:'shape',is_required:true}], goal:[{is_required:true,title:'try new drink',description:'This poster in a dessert station can make you excited about trying out this new drink.'},{is_required:true,title:'attract attention',description:'This poster was simply to make fun signs for a dessert station.'}], guideline:[{is_required:true,title:'guideline1',description:'#{GuidelineFeedback::ExampleText[0]}'},{is_required:true,title:'guideline2',description:'#{GuidelineFeedback::ExampleText[1]}'}, {is_required:true,title:'guideline3',description:'#{GuidelineFeedback::ExampleText[2]}'}, {is_required:true,title:'guideline4',description:'#{GuidelineFeedback::ExampleText[3]}'}]};
  
  $(function() {
  		
  		$('#audi').append('<div class =  "row-fluid"' + 'id = "gender"'+'><p style = "font-weight:bold">Gender:</p></div>');
  		
      var genderNames = #{User::GenderNames};
      for(var i = 0; i < genderNames.length; i++){
        addCheckbox("gender",genderNames[i],fed_config.audience.gender[i]);
      }
  		
  		$('#audi').append('<div class =  "row-fluid"' + 'id = "age"'+'><p style = "font-weight:bold">Age:</p></div>');
      var ageNames = #{User::AgeRanges.keys};
      for(var i = 0; i < ageNames.length; i++){
        addCheckbox("age",ageNames[i],fed_config.audience.age[i]);
      }
  		
  		$('#audi').append('<div class =  "row-fluid"' + 'id = "country"'+'><p style = "font-weight:bold">Country:</p></div>');
      var countryNames = #{User::CountryNames};
      for(var i = 0; i < countryNames.length; i++){
        addCheckbox("country",countryNames[i],fed_config.audience.country[i]);
      }
  		
  		$('#ele').append('<div class =  "row-fluid"' + 'id = "eletype"'+'><p style = "font-weight:bold">Element Type:</p></div>');
  
      for(var i = 0; i < fed_config.element.length; i++){
        addCheckbox("eletype",fed_config.element[i].name,fed_config.element[i].is_required);
      }
  		//addCheckbox("eletype","object",true);
      
      //$('#cb_notice').prop("checked", fed_config.is_required.first_notice);
      
      $('#cb_notice').prop("checked", fed_config.is_required.first_notice);
      $('#cb_imp').prop("checked", fed_config.is_required.impression);
      $('#cb_guide').prop("checked", fed_config.is_required.guideline);
      $('#cb_goal').prop("checked", fed_config.is_required.goal);
  
  	  $('#ele').append('<input type="text" id="txtName" />');
  	  $('#ele').append('<input type="button" value="add" id="btnaddEle" />');
  	  $('#btnaddEle').click(function() {
  	        addCheckbox("eletype", $('#txtName').val(), true);
  	    });
  
  	
      //var goalcontent = [{"title":"g1","content":"Click to edit1"},{"title":"g2","content":"Click to edit1"}];
      //var guidecontent = [{"title":"guide1","content":"guide1 content"},{"title":"guide2","content":"Click to edit"}];

      var goalcontent =  fed_config.goal;
      var guidecontent = fed_config.guideline;//[{is_required:true,title:'guideline1',description:'desb1'}
  
      //goal
      addRowContent(goalcontent,'goal',true);
      addButton('goal');
      //var rowCount = $('#myTable tr').length;
      //$(".id39").each(function() {
      // var currentValue = $(this).text();
  	//});
     
      //guide
      addRowContent(guidecontent,'guide',false);
      addButton('guide');
  
  
      setTxtEditable();
  
  	var divID = "#instru_goal";
  	var txt = "You will have the perceived ratings and rationale for each of the stated design goals. Describe each goal in lay language.";
  			
  			
  	$(divID).append('<div class="comment more">'+txt+'</div>');
  
  
  	var showChar = 121;
  	var ellipsestext = "...";
  	var moretext = "more";
  	var lesstext = "less";
  	$('.more').each(function() {
  		var content = $(this).html();
  
  		if(content.length > showChar) {
  
  			var c = content.substr(0, showChar);
  			var h = content.substr(showChar-1, content.length - showChar);
  
  			var html = c + '<span class="moreelipses">'+ellipsestext+'</span><span class="morecontent"><span>' + h + '</span>&nbsp;&nbsp;<a href="" class="morelink">'+moretext+'</a></span>';
  
  			$(this).html(html);
  		}
  
  	});
  
  	$(".morelink").click(function(){
  		if($(this).hasClass("less")) {
  			$(this).removeClass("less");
  			$(this).html(moretext);
  		} else {
  			$(this).addClass("less");
  			$(this).html(lesstext);
  		}
  		$(this).parent().prev().toggle();
  		$(this).prev().toggle();
  		return false;
  	});
  
  
  
    $("#submit-btn").click(function(){
    
     fed_config.is_required.audience = true;
     fed_config.audience.gender = getValuefromCheckboxes('gender');
     fed_config.audience.age = getValuefromCheckboxes('age');
     fed_config.audience.country = getValuefromCheckboxes('country');
    
     fed_config.is_required.element = true;
     fed_config.is_required.first_notice = getValuefromCheckboxes('cb_notice');
     fed_config.is_required.impression = getValuefromCheckboxes('cb_imp');
     fed_config.is_required.goal =  getValuefromCheckboxes('cb_goal');
     fed_config.is_required.guideline =  getValuefromCheckboxes('cb_guide');
     
     fed_config.element = getValuefromCheckboxes('eletype');
     fed_config.goal = getValuefromCheckboxes('goal');
     fed_config.guideline = getValuefromCheckboxes('guide');
     console.log(fed_config);
     //alert(JSON.stringify( fed_config.goal));
     //alert(JSON.stringify(fed_config));
     
      $.ajax({
        type: "PUT",
        url: "#{design_path(@design)}",
        data: fed_config,
        dataType: "json",
        success: function(data){
          console.log("Success");
        },
        error: function(data){
          message = JSON.parse(data.responseText);
          console.log(message.error);
        }
      });
    });
  
  
  }); 	
  	
  	

  	
  function getValuefromCheckboxes(mode)
  {
  	   var arrChecked = [];
  	   switch(mode)
  	   {
  	   	case "eletype":
  	   	arrChecked = [];
  	   	var container = $('#'+mode);
        var inputs = container.find('input');
        for (var i = 0; i < inputs.length; i++) {
          
          var label = $('#'+'cb_'+mode+'_'+i).attr('value');
          console.log(label);
          if ($('#'+'cb_'+mode+'_'+i).is(':checked')) {
            arrChecked.push({name:label,is_required:true});            
          } else {
             arrChecked.push({name:label,is_required:false});       
          } 
        }
        return arrChecked;
  	   	break;

  	   	
  	   	case "goal":
  	   	case "guide": 
  	   	  arrChecked = []; 	   	
  	   	  for (var i = 0; i < $('#'+mode+' tr').length; i++) {
          
          if ($('#'+'cb_'+mode+'_'+i).is(':checked')) {
            arrChecked.push({title:$('#'+'td_'+mode+'_title_'+i).text(),description:$('#'+'td_'+mode+'_content_'+i).text(),is_required:true});            
          } else {
            arrChecked.push({title:$('#'+'td_'+mode+'_title_'+i).text(),description:$('#'+'td_'+mode+'_content_'+i).text(),is_required:false});            
          } 
        }
        return arrChecked;
  	   	break;
  	   	
  	   	case "cb_imp":
  	   	case "cb_notice":
  	   	case "cb_goal":
  	   	case "cb_guide":
  	   	if ( $('#'+mode).is(':checked')) {
            return true;         
          } else {
            return false;
            } 
  	   	break;
  	   	
  	   	default:
  	    arrChecked = [];
        //mode = element;
        var container = $('#'+mode);
        var inputs = container.find('input');
        for (var i = 0; i < inputs.length; i++) {
          
          if ($('#'+'cb_'+mode+'_'+i).is(':checked')) {
          
          arrChecked.push(true);
          
          } else {
            arrChecked.push(false);
          } 
        }
  	   }

   	   return arrChecked;

   
  } 
  	
  //addCheckbox("eletype",fed_config.element[i].name,fed_config.element[i].is_required);

  function addCheckbox(containerid,name,ischecked, cbid) {
  	   var container = $('#'+containerid);
  	   var inputs = container.find('input');
  	   
  	   cbid = typeof cbid !== 'undefined' ? cbid : 'cb_'+containerid+'_'+inputs.length;
  	   
  	   var tmp = $('<label class = "checkbox span3"/>', { 'for': cbid}).appendTo(container);
  	   $('<input />', { type: 'checkbox', id: cbid, value: name}).appendTo(tmp);
  	   $(tmp).append(document.createTextNode(name));
  	   $('#'+cbid).prop("checked", ischecked);
  
  
  	}
  	
  
  function addRowContent(arrcontent, mode, isEditable)
  {
  	for (var i = 0; i < arrcontent.length; i++) {
  
          $('#'+mode+' > tbody:last').append('\
          		<tr>\
          		    <td id = "'+'cbcontainer_'+mode+'_'+i+'" style="width:10px;"></td>\
          		    <td id = "'+'td_'+mode+'_title_'+i+'">'+arrcontent[i].title+'</td>\
         		        <td id = "'+'td_'+mode+'_content_'+i+'">'+arrcontent[i].description+'</td>\
         		    </tr>');
          
          if(isEditable)
      	{
      		$('#'+'td_'+mode+'_title_'+i).addClass("editable");
      		$('#'+'td_'+mode+'_content_'+i).addClass("editable");
      	}	
          addCheckbox('cbcontainer_'+mode+'_'+i,'',true, 'cb_'+mode+'_'+i); 
          var labletmp = $('#'+'cb_'+mode+'_'+i).parent().get(0);
          $(labletmp).removeClass("span3");
          //$(labletmp).css("width","10px");
          $(labletmp).css("padding-left","40px");
          $(labletmp).css("padding-top","6px");
  
      }
      
  	
  
  }
  
  function addButton(mode)
  {
  	$('#'+mode+'_div').append('<input type="button" value="add" id="btnadd'+mode+'" />');
  	$('#btnadd'+mode).click(function() {
  		var rowCount = $('#'+mode+' tr').length;
  		$('#'+mode+' > tbody:last').append('\
  				<tr>\
  					<td id = "'+'cbcontainer_'+mode+'_'+rowCount+'"></td>\
  					<td id = "'+'td_'+mode+'_title_'+rowCount+'">'+mode+(rowCount+1)+'</td>\
  					<td id = "'+'td_'+mode+'_content_'+rowCount+'">'+'Click to edit'+'</td>\
  				</tr>');
  		$('#'+'td_'+mode+'_title_'+rowCount).addClass("editable");
  		$('#'+'td_'+mode+'_content_'+rowCount).addClass("editable");
          //addCheckbox('cbcontainer_'+mode+'_'+rowCount,''+mode+''+(rowCount+1), 'cb_'+mode+'_'+rowCount); 
          addCheckbox('cbcontainer_'+mode+'_'+rowCount,'',true, 'cb_'+mode+'_'+rowCount);
          var labletmp = $('#'+'cb_'+mode+'_'+rowCount).parent().get(0);
          $(labletmp).removeClass("span3");
          $(labletmp).css("padding-left","40px");
          $(labletmp).css("padding-top","6px");
          
          setTxtEditable();
  
      });
  }
  function setTxtEditable() {
  	//$('td:contains("Click to edit")').click(
  	$('.editable').click(
  		    function(){
  		        var text = $(this).text();
  		        $(this).text('');
  		        //$('<input type="text" />').appendTo($(this)).val(text).select().blur(
  		        $('<textarea style = "width:250px" />').appendTo($(this)).val(text).select().blur(
  		            function(){
  		                var newText;
  		                if($(this).val()=='')
  		                {
  			                var newText = 'Click to edit';
  
  		                }else{
  			                var newText = $(this).val();	
  		                }	
  		                $(this).parent().text(newText).find('input:text').remove();
  		            });
  		    });
  }
